
package cn.lmcw.jpicasso.entity;

import cn.lmcw.jpicasso.entity.UploadImageCursor.Factory;
import io.objectbox.EntityInfo;
import io.objectbox.annotation.apihint.Internal;
import io.objectbox.internal.CursorFactory;
import io.objectbox.internal.IdGetter;

// THIS CODE IS GENERATED BY ObjectBox, DO NOT EDIT.

/**
 * Properties for entity "UploadImage". Can be used for QueryBuilder and for referencing DB names.
 */
public final class UploadImage_ implements EntityInfo<UploadImage> {

    // Leading underscores for static constants to avoid naming conflicts with property names

    public static final String __ENTITY_NAME = "UploadImage";

    public static final int __ENTITY_ID = 2;

    public static final Class<UploadImage> __ENTITY_CLASS = UploadImage.class;

    public static final String __DB_NAME = "UploadImage";

    public static final CursorFactory<UploadImage> __CURSOR_FACTORY = new Factory();

    @Internal
    static final UploadImageIdGetter __ID_GETTER = new UploadImageIdGetter();

    public final static UploadImage_ __INSTANCE = new UploadImage_();

    public final static io.objectbox.Property<UploadImage> id =
        new io.objectbox.Property<>(__INSTANCE, 0, 1, long.class, "id", true, "id");

    public final static io.objectbox.Property<UploadImage> path =
        new io.objectbox.Property<>(__INSTANCE, 1, 2, String.class, "path");

    public final static io.objectbox.Property<UploadImage> fileSize =
        new io.objectbox.Property<>(__INSTANCE, 2, 3, long.class, "fileSize");

    public final static io.objectbox.Property<UploadImage> isCompress =
        new io.objectbox.Property<>(__INSTANCE, 3, 4, boolean.class, "isCompress");

    public final static io.objectbox.Property<UploadImage> creatTime =
        new io.objectbox.Property<>(__INSTANCE, 4, 5, long.class, "creatTime");

    public final static io.objectbox.Property<UploadImage> uploaderIp =
        new io.objectbox.Property<>(__INSTANCE, 5, 6, String.class, "uploaderIp");

    public final static io.objectbox.Property<UploadImage> hash =
        new io.objectbox.Property<>(__INSTANCE, 6, 7, String.class, "hash");

    public final static io.objectbox.Property<UploadImage> status =
        new io.objectbox.Property<>(__INSTANCE, 7, 8, String.class, "status");

    public final static io.objectbox.Property<UploadImage> attribute =
        new io.objectbox.Property<>(__INSTANCE, 8, 9, String.class, "attribute");

    @SuppressWarnings("unchecked")
    public final static io.objectbox.Property<UploadImage>[] __ALL_PROPERTIES = new io.objectbox.Property[]{
        id,
        path,
        fileSize,
        isCompress,
        creatTime,
        uploaderIp,
        hash,
        status,
        attribute
    };

    public final static io.objectbox.Property<UploadImage> __ID_PROPERTY = id;

    @Override
    public String getEntityName() {
        return __ENTITY_NAME;
    }

    @Override
    public int getEntityId() {
        return __ENTITY_ID;
    }

    @Override
    public Class<UploadImage> getEntityClass() {
        return __ENTITY_CLASS;
    }

    @Override
    public String getDbName() {
        return __DB_NAME;
    }

    @Override
    public io.objectbox.Property<UploadImage>[] getAllProperties() {
        return __ALL_PROPERTIES;
    }

    @Override
    public io.objectbox.Property<UploadImage> getIdProperty() {
        return __ID_PROPERTY;
    }

    @Override
    public IdGetter<UploadImage> getIdGetter() {
        return __ID_GETTER;
    }

    @Override
    public CursorFactory<UploadImage> getCursorFactory() {
        return __CURSOR_FACTORY;
    }

    @Internal
    static final class UploadImageIdGetter implements IdGetter<UploadImage> {
        @Override
        public long getId(UploadImage object) {
            return object.id;
        }
    }

}
